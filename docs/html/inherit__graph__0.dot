digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir=LR;
  Node1 [label="Sylph::Exception",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_exception.html",tooltip="This class provides a ready-to-use interface for exception handling."];
  Node1 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="Sylph::ArrayException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_array_exception.html",tooltip="A generic Exception when an error occurs with an Array."];
  Node1 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="Sylph::FileException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_file_exception.html",tooltip="A genreric Exception which gets thrown whenever something goes wrong in the File..."];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="Sylph::IllegalArgumentException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_illegal_argument_exception.html",tooltip="Generic exception to flag an argument with an illegal state was passed to an function..."];
  Node1 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="Sylph::IllegalStateException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_illegal_state_exception.html",tooltip="Generic exception to flag that a method is not supported in the current state of..."];
  Node1 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="Sylph::IOException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_i_o_exception.html",tooltip="This is a generic exception for I/O errors."];
  Node1 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="Sylph::NullPointerException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_null_pointer_exception.html",tooltip="This Exception gets thrown when a pointer to NULL is passed to a function or method..."];
  Node1 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="Sylph::SerializationException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_serialization_exception.html",tooltip="This Exception gets thrown if there is a problem with serializing or deserializing..."];
}
