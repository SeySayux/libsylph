digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{Sylph::Application\n|+ self_app\l# _location\l|+ location()\l+ init()\l- Application()\l- ~Application()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node2 [label="{Sylph::Object\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_object.html",tooltip="The root of all classes."];
  Node3 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="_location",arrowtail="open",fontname="FreeSans"];
  Node3 [label="{Sylph::String\n|- strdata\l|+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ String()\l+ ~String()\l+ length()\l+ at()\l+ ascii()\l+ utf8()\l+ utf16()\l+ toLowerCase()\l+ toUpperCase()\l+ equalsIgnoreCase()\l+ endsWith()\l+ startsWith()\l+ contains()\l+ trim()\l+ substring()\l+ substring()\l+ indexOf()\l+ lastIndexOf()\l+ lastIndexOf()\l+ copy()\l+ merge()\l+ hashCode()\l+ boolValue()\l+ intValue()\l+ uintValue()\l+ longValue()\l+ ulongValue()\l+ floatValue()\l+ doubleValue()\l+ toBool()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator+=()\l+ operator const char *()\l+ operator std::string()\l+ fromHex()\l+ fromOct()\l+ fromSci()\l+ fromSci()\l- fromAscii()\l- fromUtf8()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_string.html",tooltip="The String class represents character strings."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node4 [label="{Sylph::Hashable\n||+ hashCode()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_hashable.html",tooltip="Interface to indicate this object provides its own hashCode function."];
  Node2 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node5 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node5 [label="{Sylph::BoolConvertible\< String \>\n||+ operator bool_type()\l# ~BoolConvertible()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_bool_convertible.html"];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node6 [label="{Sylph::BoolConvertible_base\n||# this_type_does_not_support_comparisons()\l# BoolConvertible_base()\l# BoolConvertible_base()\l# operator=()\l# ~BoolConvertible_base()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_bool_convertible__base.html",tooltip="Abstract base class for BoolConvertible."];
  Node2 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node7 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="self_app",arrowtail="open",fontname="FreeSans"];
  Node7 [label="{Sylph::ApplicationSelf\n|- _appName\l- _appType\l|+ appName()\l+ appType()\l+ fail()\l+ fail()\l+ bundle()\l+ resourceDir()\l+ resource()\l+ libraryDir()\l+ pluginDir()\l+ plugindisabledDir()\l+ systemLibraryDir()\l+ systemSettings()\l+ systemSettingsDir()\l+ systemPluginDir()\l+ systemPluginDisabledDir()\l+ systemResourceDir()\l+ systemResource()\l+ userHome()\l+ userLibraryDir()\l+ userSettings()\l+ userSettingsDir()\l+ userPluginDir()\l+ userPluginDisabledDir()\l+ userResourceDir()\l+ userResource()\l+ prefix()\l# ApplicationSelf()\l# ~ApplicationSelf()\l# _fail()\l# _fail()\l- _preconstruct()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_sylph_1_1_application_self.html",tooltip="An Application representing the currently running application."];
  Node1 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node3 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="_appName",arrowtail="open",fontname="FreeSans"];
}
